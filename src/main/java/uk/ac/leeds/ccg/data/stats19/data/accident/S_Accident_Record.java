/*
 * Source code generated by uk.ac.leeds.ccg.data.stats19.process.STATS19_JavaCodeGenerator
 */
package uk.ac.leeds.ccg.data.stats19.data.accident;

import uk.ac.leeds.ccg.data.Data_Record;
import uk.ac.leeds.ccg.data.stats19.data.id.S_RecordID;
import java.math.BigDecimal;

/**
 * https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/230590/stats19.pdf
 *
 * @author Andy Turner
 * @version 1.0.0
 */
public class S_Accident_Record extends Data_Record {

    private static final long serialVersionUID = 1L;

    protected static String NULL = "NULL";
    
    protected String Accident_Index;
    protected Integer Location_Easting_OSGR;
    protected Integer Location_Northing_OSGR;
    protected BigDecimal Longitude;
    protected BigDecimal Latitude;
    protected Byte Police_Force;
    protected Byte Accident_Severity;
    protected Integer Number_of_Vehicles;
    protected Integer Number_of_Casualties;    
    protected String Date;
    protected String Time;
    protected Byte Day_of_Week;
    protected Short Local_Authority_District;
    protected String Local_Authority_Highway;
    protected Byte First_Road_Class;
    protected Short First_Road_Number;
    protected Byte Road_Type;
    protected Byte Speed_limit;
    protected Byte Junction_Detail;
    protected Byte Junction_Control;
    protected Byte Second_Road_Class;
    protected Short Second_Road_Number;
    protected Byte Pedestrian_Crossing_Human_Control;
    protected Byte Pedestrian_Crossing_Physical_Facilities;
    protected Byte Light_Conditions;
    protected Byte Weather_Conditions;
    protected Byte Road_Surface_Conditions;
    protected Byte Special_Conditions_at_Site;
    protected Byte Carriageway_Hazards;
    protected Byte Urban_or_Rural_Area;
    protected Byte Did_Police_Officer_Attend_Scene_of_Accident;
    protected String LSOA_of_Accident_Location;

    public S_Accident_Record(S_RecordID i, String line) throws Exception {
        super(i);
        String[] s = line.split(",");
        initAccident_Index(s[0]);
        initLocation_Easting_OSGR(s[1]);
        initLocation_Northing_OSGR(s[2]);
        initLongitude(s[3]);
        initLatitude(s[4]);
        initPolice_Force(s[5]);
        initAccident_Severity(s[6]);
        initNumber_of_Vehicles(s[7]);
        initNumber_of_Casualties(s[8]);
        initDate(s[9]);
        initDay_of_Week(s[10]);
        initTime(s[11]);
        initLocal_Authority_District(s[12]);
        initLocal_Authority_Highway(s[13]);
        initFirst_Road_Class(s[14]);
        initFirst_Road_Number(s[15]);
        initRoad_Type(s[16]);
        initSpeed_limit(s[17]);
        initJunction_Detail(s[18]);
        initJunction_Control(s[19]);
        initSecond_Road_Class(s[20]);
        initSecond_Road_Number(s[21]);
        initPedestrian_Crossing_Human_Control(s[22]);
        initPedestrian_Crossing_Physical_Facilities(s[23]);
        initLight_Conditions(s[24]);
        initWeather_Conditions(s[25]);
        initRoad_Surface_Conditions(s[26]);
        initSpecial_Conditions_at_Site(s[27]);
        initCarriageway_Hazards(s[28]);
        initUrban_or_Rural_Area(s[29]);
        initDid_Police_Officer_Attend_Scene_of_Accident(s[30]);
        if (s.length > 31) {
            initLSOA_of_Accident_Location(s[31]);
        }
    }

    @Override
    public S_RecordID getId() {
        return (S_RecordID) id;
    }

    protected final void initAccident_Index(String s) {
        if (!s.trim().isEmpty()) {
            Accident_Index = s;
        } else {
            Accident_Index = null;
        }
    }

    protected final void initLocation_Easting_OSGR(String s) {
        if (!s.trim().isEmpty()) {
            Location_Easting_OSGR = Integer.parseInt(s);
        } else {
            Location_Easting_OSGR = null;
        }
    }

    protected final void initLocation_Northing_OSGR(String s) {
        if (!s.trim().isEmpty()) {
            Location_Northing_OSGR = Integer.parseInt(s);
        } else {
            Location_Northing_OSGR = null;
        }
    }

    protected final void initLongitude(String s) {
        if (!s.trim().isEmpty()) {
            if(s.equalsIgnoreCase(NULL)) {
                Longitude = null;
            } else {
                Longitude = new BigDecimal(s);
            }
        } else {
            Longitude = null;
        }
    }

    protected final void initLatitude(String s) {
        if (!s.trim().isEmpty()) {
            if(s.equalsIgnoreCase(NULL)) {
                Latitude = null;
            } else {
                Latitude = new BigDecimal(s);
            }
        } else {
            Latitude = null;
        }
    }

    protected final void initPolice_Force(String s) {
        if (!s.trim().isEmpty()) {
            Police_Force = Byte.parseByte(s);
        } else {
            Police_Force = null;
        }
    }

    protected final void initAccident_Severity(String s) {
        if (!s.trim().isEmpty()) {
            Accident_Severity = Byte.parseByte(s);
        } else {
            Accident_Severity = null;
        }
    }

    protected final void initNumber_of_Vehicles(String s) {
        if (!s.trim().isEmpty()) {
            Number_of_Vehicles = Integer.parseInt(s);
        } else {
            Number_of_Vehicles = null;
        }
    }

    protected final void initNumber_of_Casualties(String s) {
        if (!s.trim().isEmpty()) {
            Number_of_Casualties = Integer.parseInt(s);
        } else {
            Number_of_Casualties = null;
        }
    }

    protected final void initDate(String s) {
        if (!s.trim().isEmpty()) {
            Date = s;
        } else {
            Date = null;
        }
    }

    protected final void initDay_of_Week(String s) {
        if (!s.trim().isEmpty()) {
            Day_of_Week = Byte.parseByte(s);
        } else {
            Day_of_Week = null;
        }
    }

    protected final void initTime(String s) {
        if (!s.trim().isEmpty()) {
            Time = s;
        } else {
            Time = null;
        }
    }

    protected final void initLocal_Authority_District(String s) {
        if (!s.trim().isEmpty()) {
            Local_Authority_District = Short.parseShort(s);
        } else {
            Local_Authority_District = null;
        }
    }

    protected final void initLocal_Authority_Highway(String s) {
        if (!s.trim().isEmpty()) {
            Local_Authority_Highway = s;
        } else {
            Local_Authority_Highway = null;
        }
    }

    protected final void initFirst_Road_Class(String s) {
        if (!s.trim().isEmpty()) {
            First_Road_Class = Byte.parseByte(s);
        } else {
            First_Road_Class = null;
        }
    }

    protected final void initFirst_Road_Number(String s) {
        if (!s.trim().isEmpty()) {
            First_Road_Number = Short.parseShort(s);
        } else {
            First_Road_Number = null;
        }
    }

    protected final void initRoad_Type(String s) {
        if (!s.trim().isEmpty()) {
            Road_Type = Byte.parseByte(s);
        } else {
            Road_Type = null;
        }
    }

    protected final void initSpeed_limit(String s) {
        if (!s.trim().isEmpty()) {
            if (s.equalsIgnoreCase(NULL)) {
                Speed_limit = null;
            } else {
                Speed_limit = Byte.parseByte(s);
            }
        } else {
            Speed_limit = null;
        }
    }

    protected final void initJunction_Detail(String s) {
        if (!s.trim().isEmpty()) {
            Junction_Detail = Byte.parseByte(s);
        } else {
            Junction_Detail = null;
        }
    }

    protected final void initJunction_Control(String s) {
        if (!s.trim().isEmpty()) {
            Junction_Control = Byte.parseByte(s);
        } else {
            Junction_Control = null;
        }
    }

    protected final void initSecond_Road_Class(String s) {
        if (!s.trim().isEmpty()) {
            Second_Road_Class = Byte.parseByte(s);
        } else {
            Second_Road_Class = null;
        }
    }

    protected final void initSecond_Road_Number(String s) {
        if (!s.trim().isEmpty()) {
            Second_Road_Number = Short.parseShort(s);
        } else {
            Second_Road_Number = null;
        }
    }

    protected final void initPedestrian_Crossing_Human_Control(String s) {
        if (!s.trim().isEmpty()) {
            Pedestrian_Crossing_Human_Control = Byte.parseByte(s);
        } else {
            Pedestrian_Crossing_Human_Control = null;
        }
    }

    protected final void initPedestrian_Crossing_Physical_Facilities(String s) {
        if (!s.trim().isEmpty()) {
            Pedestrian_Crossing_Physical_Facilities = Byte.parseByte(s);
        } else {
            Pedestrian_Crossing_Physical_Facilities = null;
        }
    }

    protected final void initLight_Conditions(String s) {
        if (!s.trim().isEmpty()) {
            Light_Conditions = Byte.parseByte(s);
        } else {
            Light_Conditions = null;
        }
    }

    protected final void initWeather_Conditions(String s) {
        if (!s.trim().isEmpty()) {
            Weather_Conditions = Byte.parseByte(s);
        } else {
            Weather_Conditions = null;
        }
    }

    protected final void initRoad_Surface_Conditions(String s) {
        if (!s.trim().isEmpty()) {
            Road_Surface_Conditions = Byte.parseByte(s);
        } else {
            Road_Surface_Conditions = null;
        }
    }

    protected final void initSpecial_Conditions_at_Site(String s) {
        if (!s.trim().isEmpty()) {
            Special_Conditions_at_Site = Byte.parseByte(s);
        } else {
            Special_Conditions_at_Site = null;
        }
    }

    protected final void initCarriageway_Hazards(String s) {
        if (!s.trim().isEmpty()) {
            Carriageway_Hazards = Byte.parseByte(s);
        } else {
            Carriageway_Hazards = null;
        }
    }

    protected final void initUrban_or_Rural_Area(String s) {
        if (!s.trim().isEmpty()) {
            Urban_or_Rural_Area = Byte.parseByte(s);
        } else {
            Urban_or_Rural_Area = null;
        }
    }

    protected final void initDid_Police_Officer_Attend_Scene_of_Accident(String s) {
        if (!s.trim().isEmpty()) {
            Did_Police_Officer_Attend_Scene_of_Accident = Byte.parseByte(s);
        } else {
            Did_Police_Officer_Attend_Scene_of_Accident = null;
        }
    }

    protected final void initLSOA_of_Accident_Location(String s) {
        if (!s.trim().isEmpty()) {
            LSOA_of_Accident_Location = s;
        } else {
            LSOA_of_Accident_Location = null;
        }
    }

    public String getAccident_Index() {
        return Accident_Index;
    }

    public Integer getLocation_Easting_OSGR() {
        return Location_Easting_OSGR;
    }

    public Integer getLocation_Northing_OSGR() {
        return Location_Northing_OSGR;
    }

    public BigDecimal getLongitude() {
        return Longitude;
    }

    public BigDecimal getLatitude() {
        return Latitude;
    }

    public Byte getPolice_Force() {
        return Police_Force;
    }

    public Byte getAccident_Severity() {
        return Accident_Severity;
    }

    public Integer getNumber_of_Vehicles() {
        return Number_of_Vehicles;
    }

    public Integer getNumber_of_Casualties() {
        return Number_of_Casualties;
    }

    public String getDate() {
        return Date;
    }

    public Byte getDay_of_Week() {
        return Day_of_Week;
    }

    public String getTime() {
        return Time;
    }

    public Short getLocal_Authority_District() {
        return Local_Authority_District;
    }

    public String getLocal_Authority_Highway() {
        return Local_Authority_Highway;
    }

    public Byte getFirst_Road_Class() {
        return First_Road_Class;
    }

    public Short getFirst_Road_Number() {
        return First_Road_Number;
    }

    public Byte getRoad_Type() {
        return Road_Type;
    }

    public Byte getSpeed_limit() {
        return Speed_limit;
    }

    public Byte getJunction_Detail() {
        return Junction_Detail;
    }

    public Byte getJunction_Control() {
        return Junction_Control;
    }

    public Byte getSecond_Road_Class() {
        return Second_Road_Class;
    }

    public Short getSecond_Road_Number() {
        return Second_Road_Number;
    }

    public Byte getPedestrian_Crossing_Human_Control() {
        return Pedestrian_Crossing_Human_Control;
    }

    public Byte getPedestrian_Crossing_Physical_Facilities() {
        return Pedestrian_Crossing_Physical_Facilities;
    }

    public Byte getLight_Conditions() {
        return Light_Conditions;
    }

    public Byte getWeather_Conditions() {
        return Weather_Conditions;
    }

    public Byte getRoad_Surface_Conditions() {
        return Road_Surface_Conditions;
    }

    public Byte getSpecial_Conditions_at_Site() {
        return Special_Conditions_at_Site;
    }

    public Byte getCarriageway_Hazards() {
        return Carriageway_Hazards;
    }

    public Byte getUrban_or_Rural_Area() {
        return Urban_or_Rural_Area;
    }

    public Byte getDid_Police_Officer_Attend_Scene_of_Accident() {
        return Did_Police_Officer_Attend_Scene_of_Accident;
    }

    public String getLSOA_of_Accident_Location() {
        return LSOA_of_Accident_Location;
    }
}
